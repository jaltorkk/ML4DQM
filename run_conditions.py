import os
import sys

All_runs_2023=['365889', '365882', '365876', '365844', '365843', '365842', '365841', '365840', '365839', '365838', '365837', '365836', '365835', '365834', '365775', '365765', '365757', '365756', '365755', '365754', '365753', '366533', '366504', '366500', '366499', '366498', '366497', '366494', '366471', '366469', '366451', '366450', '366449', '366442', '366895', '366891', '366876', '366874', '366873', '366850', '366841', '366840', '366839', '366838', '366833', '366832', '366829', '366821', '366820', '366804', '366802', '366801', '366729', '366727', '367264', '367263', '367262', '367260', '367234', '367232', '367231', '367230', '367229', '367228', '367133', '367131', '367130', '367129', '367128', '367127', '367112', '367111', '367104', '367103', '367102', '367100', '367095', '367079', '367072', '367071', '367070', '367065', '367064', '367063', '367062', '366933', '367554', '367553', '367552', '367516', '367515', '367477', '367475', '367416', '367415', '367413', '367406', '367355', '367337', '367336', '367334', '367315', '367314', '367312', '367271', '367270', '367269', '367267', '367758', '367742', '367730', '367699', '367697', '367696', '367691', '367666', '367665', '367663', '367662', '367661', '367619', '367618', '367615', '368224', '368223', '367910', '367908', '367907', '367906', '367905', '367904', '367902', '367884', '367883', '367881', '367840', '367838', '367836', '367831', '367790', '367772', '367771', '367770', '368453', '368452', '368451', '368437', '368423', '368412', '368411', '368410', '368400', '368389', '368388', '368384', '368383', '368382', '368343', '368336', '368334', '368333', '368332', '368331', '368321', '368320', '368318', '368229', '368765', '368764', '368763', '368762', '368753', '368749', '368746', '368724', '368723', '368685', '368684', '368678', '368676', '368675', '368674', '368673', '368672', '368670', '368669', '368636', '368613', '368612', '368611', '368609', '368567', '368566', '368548', '368547', '368546', '368542', '368489', '368454', '368823', '368822', '368443', '368440', '370092', '369999', '369998', '369978', '369956', '369943', '369927', '369873', '369870', '369869', '370355', '370340', '370332', '370321', '370307', '370304', '370300', '370294', '370293', '370196', '370192', '370175', '370172', '370169', '370144', '370129', '370102', '370097', '370093', '370790', '370776', '370775', '370774', '370772', '370753', '370749', '370725', '370717', '370667', '370665', '370664', '370580', '370579', '370560', '370522', '370497', '370472', '370460', '370436', '370406', '370357', '370354']

good_runs_2023 = ['367334', '367908', '368333', '367070', '367696', '370304', '367906', '368822', '367270', '368823', '368685', 
                  '370775', '365765', '368567', '367355', '368412', '368224', '366802', '366838', '367516', '368332', '368343', 
                  '370144', '367416', '368453', '367904', '368548', '367552', '367907', '367312', '367730', '367665', '369927', 
                  '367772', '367691', '368489', '370717', '367666', '365842', '370357', '367130', '370667', '370772', '370175', 
                  '368318', '368675', '368723', '367112', '367262', '367554', '370560', '370300', '367771', '365876', '368674', 
                  '367406', '370472', '367661', '369999', '367103', '367095', '366850', '367662', '368753', '367234', '370354', 
                  '368423', '368388', '367263', '367337', '367663', '370753', '366833', '368546', '370169', '365836', '365838', 
                  '370580', '366841', '367269', '367315', '367415', '366821', '367699', '366840', '368678', '369943', '370332', 
                  '370776', '366804', '368611', '368676', '368400', '367413', '370307', '368762', '365775', '368223', '366832', 
                  '367881', '367229', '368547', '367064', '367905', '367128', '367619', '367102', '367553', '367079', '368384', 
                  '367104', '368669', '366801', '368382', '370129', '367758', '367836', '370321', '367231', '367100', '368636', 
                  '367133', '370579', '366820', '369998', '370097', '367831', '367131', '367232', '367515', '368451', '370293', 
                  '368672', '367264', '368746', '367910', '367838', '369956', '370522', '368389', '365882', '366933', '367840', 
                  '369978', '367615', '367260', '368321', '370102', '368764', '367065', '367884', '370172', '367271', '366829', 
                  '370406', '365844', '368229', '368454', '365843', '367883', '367902', '368609', '370460', '367790', '368765', 
                  '368749', '370340', '367618', '367062', '366729', '367267', '366727', '365840', '365889', '365834', '368566', 
                  '370294', '370436', '370725', '365839', '367111', '367063', '367336', '368670', '367475', '370497', '370093', 
                  '367742', '370749', '367230', '367129', '368684', '368320', '365835', '370790', '367477', '367314', '367770', 
                  '370774', '368410', '367228', '368613', '368724', '365837', '367127']

bad_runs_2023 = ['365841', '365757', '365756', '365755', '365754', '365753', '366533', '366504', '366500', '366499', '366498', 
                 '366497', '366494', '366471', '366469', '366451', '366450', '366449', '366442', '366895', '366891', '366876', 
                 '366874', '366873', '366839', '367072', '367071', '367697', '368452', '368437', '368411', '368383', '368336', 
                 '368334', '368331', '368763', '368673', '368612', '368542', '368443', '368440', '370092', '369873', '369870', 
                 '369869', '370355', '370196', '370192', '370665', '370664']

# 256 runs in total = 205 good + 51 bad
# from collision 53 - collision 65

# --------------------------cycles--------------------------
cycle_53 = "365889, 365882, 365876, 365844, 365843, 365842, 365841, 365840, 365839, 365838, 365837, 365836, 365835, 365834, 365775, 365765, 365757, 365756, 365755, 365754, 365753"
cycle_54 = "366533, 366504, 366500, 366499, 366498, 366497, 366494, 366471, 366469, 366451, 366450, 366449, 366442"
cycle_55 = "366895, 366891, 366876, 366874, 366873, 366850, 366841, 366840, 366839, 366838, 366833, 366832, 366829, 366821, 366820, 366804, 366802, 366801, 366729, 366727"
cycle_56 = "367264, 367263, 367262, 367260, 367234, 367232, 367231, 367230, 367229, 367228, 367133, 367131, 367130, 367129, 367128, 367127, 367112, 367111, 367104, 367103, 367102, 367100, 367095, 367079, 367072, 367071, 367070, 367065, 367064, 367063, 367062, 366933"
cycle_57 = "367554, 367553, 367552, 367516, 367515, 367477, 367475, 367416, 367415, 367413, 367406, 367355, 367337, 367336, 367334, 367315, 367314, 367312, 367271, 367270, 367269, 367267"
cycle_58 = "367758, 367742, 367730, 367699, 367697, 367696, 367691, 367666, 367665, 367663, 367662, 367661, 367619, 367618, 367615"
cycle_59 = "368224, 368223, 367910, 367908, 367907, 367906, 367905, 367904, 367902, 367884, 367883, 367881, 367840, 367838, 367836, 367831, 367790, 367772, 367771, 367770"
cycle_60 = "368453, 368452, 368451, 368437, 368423, 368412, 368411, 368410, 368400, 368389, 368388, 368384, 368383, 368382, 368343, 368336, 368334, 368333, 368332, 368331, 368321, 368320, 368318, 368229"
cycle_61 = "368765, 368764, 368763, 368762, 368753, 368749, 368746, 368724, 368723, 368685, 368684, 368678, 368676, 368675, 368674, 368673, 368672, 368670, 368669, 368636, 368613, 368612, 368611, 368609, 368567, 368566, 368548, 368547, 368546, 368542, 368489, 368454"
cycle_62 = "368823, 368822,368443, 368440"
cycle_63 = "370092, 369999, 369998, 369978, 369956, 369943, 369927, 369873, 369870, 369869"
cycle_64 = "370355, 370340, 370332, 370321, 370307, 370304, 370300, 370294, 370293, 370196, 370192, 370175, 370172, 370169, 370144, 370129, 370102, 370097, 370093"
cycle_65 = "370790, 370776, 370775, 370774, 370772, 370753, 370749, 370725, 370717, 370667, 370665, 370664, 370580, 370579, 370560, 370522, 370497, 370472, 370460, 370436, 370406, 370357,370354"

# --------------------------Training runs-------------------------- 
def train_run_2023(train_runs_2023):
    valid_runs = []
    warnings = []
    for run in train_runs_2023:
        run = str(run).strip()  # Convert to string and remove any leading or trailing spaces
        if len(run) != 6 or not run.isdigit():
            return f"value {run} is out of range for type integer."
        elif run not in All_runs_2023:
            return f"Error: This run {run} does not exist for JetMET PD."
        elif run not in good_runs_2023:
            warnings.append(f"Warning: This run {run} is not a good run. Skipping it.")
            continue
        valid_runs.append(run)
    if len(valid_runs) < 20:
        warnings.append("Warning: It is recommended to train with at least 20 runs.")
    return valid_runs, warnings

# -----------------------Test runs--------------------------
def test_run_2023(test_runs_2023):
    valid_runs = []
    warnings = []
    for run in test_runs_2023:
        run = str(run).strip()  # Convert to string and remove any leading or trailing spaces
        if len(run) != 6 or not run.isdigit():
            return f"value {run} is out of range for type integer."
        elif run not in All_runs_2023:
            return f"Error: This run {run} does not exist for JetMET PD."
        else:
            valid_runs.append(run)
    return valid_runs, warnings
  
